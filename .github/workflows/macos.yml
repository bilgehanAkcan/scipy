name: macOS tests

on:
  workflow_dispatch:
  push:
    branches:
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**

permissions:
   contents: read  # to fetch code (actions/checkout)

env:
  INSTALLDIR: "build-install"
  CCACHE_DIR: "${{ github.workspace }}/.ccache"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    uses: ./.github/workflows/commit_message.yml

  test_meson:
    name: Conda & umfpack/scikit-sparse, fast, py3.11/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive

    - name: Install Ccache
      run: |
        brew install ccache

    - name:  Prepare compiler cache
      id:    prep-ccache
      shell: bash -l {0}
      run: |
        mkdir -p "${CCACHE_DIR}"
        echo "dir=$CCACHE_DIR" >> $GITHUB_OUTPUT
        NOW=$(date -u +"%F-%T")
        echo "timestamp=${NOW}" >> $GITHUB_OUTPUT

    - name: Setup compiler cache
      uses:  actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      id:    cache-ccache
      with:
        path: ${{ steps.prep-ccache.outputs.dir }}
        key:  ${{ github.workflow }}-${{ matrix.python-version }}-ccache-macos-${{ steps.prep-ccache.outputs.timestamp }}
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.python-version }}-ccache-macos-

    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
      with:
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
        channel-priority: true
        activate-environment: scipy-dev
        use-only-tar-bz2: false
        miniforge-variant: Miniforge3
        miniforge-version: latest
        use-mamba: true

    - name: Get Date
      id: get-date
      run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache conda
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      env:
        CACHE_NUMBER: 1
      with:
        path: ${{ env.CONDA }}/envs/scipy-dev
        key:
          ${{ runner.os }}--${{ steps.get-date.outputs.today }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      id: envcache

    - name: Update Conda Environment
      run: mamba env update -n scipy-dev -f environment.yml
      if: steps.envcache.outputs.cache-hit != 'true'

    - name: Build and Install SciPy
      shell: bash -l {0}
      run: |
        conda activate scipy-dev
        mamba install python=${{ matrix.python-version}}

        mamba install "scikit-umfpack=0.3.3" scikit-sparse
        mamba install libboost-headers=1.89.0
        export BOOST_INCLUDEDIR=${{ env.CONDA }}/envs/scipy-dev/include/boost
        export BOOST_LIBRARYDIR=${{ env.CONDA }}/envs/scipy-dev/lib
        rm -rf subprojects/boost_math

        mamba install qhull=2020.2
        rm -rf subprojects/qhull_r

        CC="ccache $CC" spin build --use-system-libraries

    - name: Cache testmon data
      uses: actions/cache@v4
      with:
        path: .testmondata
        key: testmon-${{ runner.os }}-${{ matrix.python-version }}-${{ github.sha }}
        restore-keys: |
          testmon-${{ runner.os }}-${{ matrix.python-version }}-

    - name: Test SciPy with testmon
      shell: bash -l {0}
      run: |
        conda activate scipy-dev
        pip install pytest-testmon pytest-xdist
        export OMP_NUM_THREADS=2
        spin test -- --testmon -n 2

    - name: Ccache statistics
      shell: bash -l {0}
      run: |
        ccache -s


  test_scipy_openblas:
    name: M1 & OpenBLAS, fast, py3.11/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
    runs-on: macos-14
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
    - name: Setup Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Build and Install SciPy
      run: |
        sudo xcode-select -s /Applications/Xcode_15.2.app

        git submodule update --init
        GFORTRAN_LOC=$(which gfortran-13)
        ln -s $GFORTRAN_LOC gfortran
        export PATH=$PWD:$PATH

        GFORTRAN_LIB=$(dirname `gfortran --print-file-name libgfortran.dylib`)
        export DYLD_LIBRARY_PATH=$GFORTRAN_LIB

        pip install meson cython pythran pybind11 ninja numpy spin "click<8.3.0"
        pip install -r requirements/openblas.txt
        spin build --with-scipy-openblas

        pip install pooch pytest hypothesis pytest-testmon pytest-xdist

    - name: Cache testmon data
      uses: actions/cache@v4
      with:
        path: .testmondata
        key: testmon-${{ runner.os }}-${{ matrix.python-version }}-${{ github.sha }}
        restore-keys: |
          testmon-${{ runner.os }}-${{ matrix.python-version }}-

    - name: Run SciPy tests with testmon
      run: |
        spin test -- --testmon -n 2


  test_accelerate:
    name: Accelerate, full, py3.13/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        blas-interface: ["LP64", "ILP64"]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: "3.13"

    - name: Make gfortran-13 on runner image usable
      run: |
        FC=$(which gfortran-13)
        GFORTRAN_LIB=$(dirname `$FC --print-file-name libgfortran.dylib`)
        echo DYLD_LIBRARY_PATH=$GFORTRAN_LIB >> "$GITHUB_ENV"
        echo FC=$FC >> "$GITHUB_ENV"

    - name: Install dependencies from PyPI
      run: |
        pip install meson cython pythran pybind11 ninja numpy spin pooch pytest hypothesis "click<8.3.0"
        pip install pytest-testmon pytest-xdist

    - name: Build SciPy with Accelerate (LP64)
      if: matrix.blas-interface == 'LP64'
      run: |
        spin build --with-accelerate -S-Db_ndebug=true

    - name: Build SciPy with Accelerate (ILP64)
      if: matrix.blas-interface == 'ILP64'
      run: |
        spin build -S-Dblas=accelerate -S-Duse-ilp64=true -S-Dblas-symbol-suffix='$NEWLAPACK$ILP64' -S-Db_ndebug=true

    - name: Cache testmon data
      uses: actions/cache@v4
      with:
        path: .testmondata
        key: testmon-${{ runner.os }}-${{ matrix.python-version }}-${{ github.sha }}
        restore-keys: |
          testmon-${{ runner.os }}-${{ matrix.python-version }}-

    - name: Run the test suite with testmon
      run: |
        spin test -- --testmon -n 2
